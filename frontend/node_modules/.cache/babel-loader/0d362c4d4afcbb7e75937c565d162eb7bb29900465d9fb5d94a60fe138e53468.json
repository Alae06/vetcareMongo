{"ast":null,"code":"import api from './api';\n\n// Get all pets\nexport const getAllPets = async () => {\n  try {\n    const response = await api.get('/pets');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching pets:', error);\n    throw error;\n  }\n};\n\n// Get pets by owner ID\nexport const getPetsByOwner = async ownerId => {\n  try {\n    const response = await api.get(`/pets/owner/${ownerId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching pets for owner ID ${ownerId}:`, error);\n    throw error;\n  }\n};\n\n// Get pet by ID\nexport const getPetById = async id => {\n  try {\n    const response = await api.get(`/pets/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching pet with ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Create new pet\nexport const createPet = async petData => {\n  try {\n    const response = await api.post('/pets', petData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating pet:', error);\n    throw error;\n  }\n};\n\n// Update pet\nexport const updatePet = async (id, petData) => {\n  try {\n    const response = await api.put(`/pets/${id}`, petData);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating pet with ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Delete pet\nexport const deletePet = async id => {\n  try {\n    const response = await api.delete(`/pets/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error deleting pet with ID ${id}:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["api","getAllPets","response","get","data","error","console","getPetsByOwner","ownerId","getPetById","id","createPet","petData","post","updatePet","put","deletePet","delete"],"sources":["C:/Users/Alae/Desktop/GetUpdate/vetcareMongo/frontend/src/services/petService.js"],"sourcesContent":["import api from './api';\r\n\r\n// Get all pets\r\nexport const getAllPets = async () => {\r\n  try {\r\n    const response = await api.get('/pets');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching pets:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get pets by owner ID\r\nexport const getPetsByOwner = async (ownerId) => {\r\n  try {\r\n    const response = await api.get(`/pets/owner/${ownerId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching pets for owner ID ${ownerId}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get pet by ID\r\nexport const getPetById = async (id) => {\r\n  try {\r\n    const response = await api.get(`/pets/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching pet with ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Create new pet\r\nexport const createPet = async (petData) => {\r\n  try {\r\n    const response = await api.post('/pets', petData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error creating pet:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update pet\r\nexport const updatePet = async (id, petData) => {\r\n  try {\r\n    const response = await api.put(`/pets/${id}`, petData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error updating pet with ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete pet\r\nexport const deletePet = async (id) => {\r\n  try {\r\n    const response = await api.delete(`/pets/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error deleting pet with ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n}; "],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;;AAEvB;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,OAAO,CAAC;IACvC,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,cAAc,GAAG,MAAOC,OAAO,IAAK;EAC/C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,eAAeK,OAAO,EAAE,CAAC;IACxD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoCG,OAAO,GAAG,EAAEH,KAAK,CAAC;IACpE,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,UAAU,GAAG,MAAOC,EAAE,IAAK;EACtC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,SAASO,EAAE,EAAE,CAAC;IAC7C,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8BK,EAAE,GAAG,EAAEL,KAAK,CAAC;IACzD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,SAAS,GAAG,MAAOC,OAAO,IAAK;EAC1C,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMF,GAAG,CAACa,IAAI,CAAC,OAAO,EAAED,OAAO,CAAC;IACjD,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,SAAS,GAAG,MAAAA,CAAOJ,EAAE,EAAEE,OAAO,KAAK;EAC9C,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMF,GAAG,CAACe,GAAG,CAAC,SAASL,EAAE,EAAE,EAAEE,OAAO,CAAC;IACtD,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8BK,EAAE,GAAG,EAAEL,KAAK,CAAC;IACzD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,SAAS,GAAG,MAAON,EAAE,IAAK;EACrC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMF,GAAG,CAACiB,MAAM,CAAC,SAASP,EAAE,EAAE,CAAC;IAChD,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8BK,EAAE,GAAG,EAAEL,KAAK,CAAC;IACzD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
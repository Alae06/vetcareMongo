{"ast":null,"code":"import api from './api';\n\n// Get all visits\nexport const getAllVisits = async () => {\n  try {\n    const response = await api.get('/visits');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching visits:', error);\n    throw error;\n  }\n};\n\n// Get visits by pet ID\nexport const getVisitsByPet = async petId => {\n  try {\n    const response = await api.get(`/visits/pet/${petId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching visits for pet ID ${petId}:`, error);\n    throw error;\n  }\n};\n\n// Get visit by ID\nexport const getVisitById = async id => {\n  try {\n    const response = await api.get(`/visits/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching visit with ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Create new visit\nexport const createVisit = async visitData => {\n  try {\n    const response = await api.post('/visits', visitData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating visit:', error);\n    throw error;\n  }\n};\n\n// Update visit\nexport const updateVisit = async (id, visitData) => {\n  try {\n    const response = await api.put(`/visits/${id}`, visitData);\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating visit with ID ${id}:`, error);\n    throw error;\n  }\n};\n\n// Delete visit\nexport const deleteVisit = async id => {\n  try {\n    const response = await api.delete(`/visits/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error deleting visit with ID ${id}:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["api","getAllVisits","response","get","data","error","console","getVisitsByPet","petId","getVisitById","id","createVisit","visitData","post","updateVisit","put","deleteVisit","delete"],"sources":["C:/Users/Alae/Desktop/GetUpdate/vetcareMongo/frontend/src/services/visitService.js"],"sourcesContent":["import api from './api';\r\n\r\n// Get all visits\r\nexport const getAllVisits = async () => {\r\n  try {\r\n    const response = await api.get('/visits');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching visits:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get visits by pet ID\r\nexport const getVisitsByPet = async (petId) => {\r\n  try {\r\n    const response = await api.get(`/visits/pet/${petId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching visits for pet ID ${petId}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get visit by ID\r\nexport const getVisitById = async (id) => {\r\n  try {\r\n    const response = await api.get(`/visits/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error fetching visit with ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Create new visit\r\nexport const createVisit = async (visitData) => {\r\n  try {\r\n    const response = await api.post('/visits', visitData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error creating visit:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update visit\r\nexport const updateVisit = async (id, visitData) => {\r\n  try {\r\n    const response = await api.put(`/visits/${id}`, visitData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error updating visit with ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete visit\r\nexport const deleteVisit = async (id) => {\r\n  try {\r\n    const response = await api.delete(`/visits/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(`Error deleting visit with ID ${id}:`, error);\r\n    throw error;\r\n  }\r\n}; "],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;;AAEvB;AACA,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,SAAS,CAAC;IACzC,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,cAAc,GAAG,MAAOC,KAAK,IAAK;EAC7C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,eAAeK,KAAK,EAAE,CAAC;IACtD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoCG,KAAK,GAAG,EAAEH,KAAK,CAAC;IAClE,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,YAAY,GAAG,MAAOC,EAAE,IAAK;EACxC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,WAAWO,EAAE,EAAE,CAAC;IAC/C,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgCK,EAAE,GAAG,EAAEL,KAAK,CAAC;IAC3D,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,WAAW,GAAG,MAAOC,SAAS,IAAK;EAC9C,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMF,GAAG,CAACa,IAAI,CAAC,SAAS,EAAED,SAAS,CAAC;IACrD,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,WAAW,GAAG,MAAAA,CAAOJ,EAAE,EAAEE,SAAS,KAAK;EAClD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMF,GAAG,CAACe,GAAG,CAAC,WAAWL,EAAE,EAAE,EAAEE,SAAS,CAAC;IAC1D,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgCK,EAAE,GAAG,EAAEL,KAAK,CAAC;IAC3D,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,WAAW,GAAG,MAAON,EAAE,IAAK;EACvC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMF,GAAG,CAACiB,MAAM,CAAC,WAAWP,EAAE,EAAE,CAAC;IAClD,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgCK,EAAE,GAAG,EAAEL,KAAK,CAAC;IAC3D,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}